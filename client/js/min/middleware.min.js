function setConnected(){}function connect(){var n=new SockJS("/hello");stompClient=Stomp.over(n),stompClient.connect({},function(n){setConnected(!0),console.log("Connected: "+n),stompClient.subscribe("/topic/greetings",function(n){return JSON.parse(n.body).content})})}function disconnect(){stompClient.disconnect(),setConnected(!1),console.log("Disconnected")}function sendName(){var n=document.getElementById("name").value;stompClient.send("/app/hello",{},JSON.stringify({name:n}))}var SocketAbstract,sck,stompClient;
!function(x){var n=x({});x.subscribe=function(){n.on.apply(n,arguments)},x.unsubscribe=function(){n.off.apply(n,arguments)},x.publish=function(){n.trigger.apply(n,arguments)}}(jQuery);var guid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(x){var n=16*Math.random()|0,r="x"===x?n:3&n|8;return r.toString(16)})};
window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem;var ClientStore=function(){if(window.requestFileSystem){var e=this;e.filesystem=null,navigator.webkitPersistentStorage.requestQuota(314572800,function(r){window.requestFileSystem(window.TEMPORARY,r,function(r){e.filesystem=r,e.getList()},e.errorHandler)},e.errorHandler)}else console.error("Sorry! Your browser doesn't support the FileSystem API :(")};ClientStore.prototype.errorHandler=function(e){var r="";switch(e.code){case FileError.SECURITY_ERR:r="Security Error";break;case FileError.NOT_FOUND_ERR:r="Not Found Error";break;case FileError.QUOTA_EXCEEDED_ERR:r="Quota Exceeded Error";break;case FileError.INVALID_MODIFICATION_ERR:r="Invalid Modification Error";break;case FileError.INVALID_STATE_ERR:r="Invalid State Error";break;default:r="Unknown Error"}console.log(r)},ClientStore.prototype.save=function(e,r,t){var o=this,n=t||"audio/mpeg";o.filesystem.root.getFile(e,{create:!0},function(e){e.createWriter(function(e){e.onwriteend=function(){o.getList()},e.onerror=function(e){console.error("Write error: "+e.toString())};var t=new Blob([r],{type:n});e.write(t)},o.errorHandler)},o.errorHandler)},ClientStore.prototype.load=function(e,r){var t=this;r=r||function(){},t.filesystem.root.getFile(e,{},function(e){e.file(function(e){r(e)},t.errorHandler)},t.errorHandler)},ClientStore.prototype.delete=function(e,r){var t=this;r=r||function(){},t.filesystem.root.getFile(e,{create:!1},function(e){e.remove(function(){t.getList(),r(!0)},t.errorHandler)},t.errorHandler)},ClientStore.prototype.getList=function(e){var r=this;e=e||function(){};var t=r.filesystem.root.createReader(),o=[],n=function(){t.readEntries(function(r){return r.length?(o=o.concat(r),n(),void 0):(e(o),o)},r.errorHandler)};n()};var cStore=new ClientStore;
var Client=function(){this.id="c"+guid()},curClient=new Client;
var Song=function(t){this.id="s"+guid(),this.meta={},t&&t.id?(this.id=t.id,this.meta=t.meta):t&&(this.file=t,this.meta=this.getMeta(t),cStore.save(this.id,this.getFile()))};Song.getMeta=function(t){var e={};if(id3(t,function(t,i){e.title=i.title||i.v2.title,e.album=i.album||i.v2.album,e.artist=i.artist||i.v2.artist,e.genre=i.genre||i.v2.genre,e.duration=i.duration||i.v2.duration,e.year=i.year||i.v2.year}),!e.duration){var i;i=URL.createObjectURL(t);var r=document.createElement("audio");r.addEventListener("canplaythrough",function(t){e.duration=t.currentTarget.duration,URL.revokeObjectURL(i)}),r.setAttribute("src",i)}return e},Song.prototype.getID=function(){return this.id},Song.prototype.getFile=function(){return this.file},Song.prototype.toJSON=function(){var t;return t.id=this.id,t.meta=this.meta,t};
var url="http://192.168.43.49:8080/hello",socket=new SockJS(url);stompClient=Stomp.over(socket),stompClient.connect({},function(){stompClient.subscribe("/player/songAdded",function(n){var e=JSON.parse(n.body);return e.content}),stompClient.subscribe("/player/songRemoved",function(n){var e=JSON.parse(n.body);return e.content}),stompClient.subscribe("/player/clientDisconnected",function(n){var e=JSON.parse(n.body);return e.content}),stompClient.subscribe("/player/uploadSong",function(n){var e=JSON.parse(n.body),t=new FormData;return t.append("id",e.songID),t.append("file",curPlaylist.getSong(e.songID)),$.post("songs/upload",t),e.content}),stompClient.subscribe("/player/songPlaying",function(n){var e=JSON.parse(n.body);return e.content}),stompClient.subscribe("/player/songPaused",function(n){var e=JSON.parse(n.body);return e.content}),stompClient.subscribe("/player/songStopped",function(n){var e=JSON.parse(n.body);return e.content}),stompClient.send("/app/addSong",{},JSON.stringify({name:"name"}))}),$.subscribe("addedSong",function(n,e){var t=new Song(e.file);stompClient.send("/app/addSong",{},JSON.stringify(t.toJSON()))}),$.subscribe("removedSong",function(){stompClient.send("/app/removeSong",{},JSON.stringify({id:song.id}))}),$.subscribe("playCurrent",function(){stompClient.send("/app/playCurrent",{},JSON.stringify({}))}),$.subscribe("pauseCurrent",function(){stompClient.send("/app/pauseCurrent",{},JSON.stringify({}))}),$.subscribe("stopCurrent",function(){stompClient.send("/app/stopCurrent",{},JSON.stringify({}))}),$.subscribe("previousSong",function(){stompClient.send("/app/removeSong",{},JSON.stringify({}))}),$.subscribe("nextSong",function(){stompClient.send("/app/nextSong",{},JSON.stringify({}))}),$.subscribe("reorderPlaylist",function(){stompClient.send("/app/reorderPlaylist",{},JSON.stringify({}))});