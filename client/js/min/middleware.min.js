function setConnected(){}function connect(){var t=new SockJS("/hello");stompClient=Stomp.over(t),stompClient.connect({},function(t){setConnected(!0),console.log("Connected: "+t),stompClient.subscribe("/topic/greetings",function(t){return JSON.parse(t.body).content})})}function disconnect(){stompClient.disconnect(),setConnected(!1),console.log("Disconnected")}function sendName(){var t=document.getElementById("name").value;stompClient.send("/app/hello",{},JSON.stringify({name:t}))}var guid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0,n="x"===t?e:3&e|8;return n.toString(16)})};window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem;var ClientStore=function(){if(window.requestFileSystem){var t=this;t.filesystem=null,navigator.webkitPersistentStorage.requestQuota(314572800,function(e){window.requestFileSystem(window.TEMPORARY,e,function(e){t.filesystem=e,t.getList()},t.errorHandler)},t.errorHandler)}else console.error("Sorry! Your browser doesn't support the FileSystem API :(")};ClientStore.prototype.errorHandler=function(t){var e="";switch(t.code){case FileError.SECURITY_ERR:e="Security Error";break;case FileError.NOT_FOUND_ERR:e="Not Found Error";break;case FileError.QUOTA_EXCEEDED_ERR:e="Quota Exceeded Error";break;case FileError.INVALID_MODIFICATION_ERR:e="Invalid Modification Error";break;case FileError.INVALID_STATE_ERR:e="Invalid State Error";break;default:e="Unknown Error"}console.log(e)},ClientStore.prototype.save=function(t,e,n){var o=this,r=n||"audio/mpeg";o.filesystem.root.getFile(t,{create:!0},function(t){t.createWriter(function(t){t.onwriteend=function(){o.getList()},t.onerror=function(t){console.error("Write error: "+t.toString())};var n=new Blob([e],{type:r});t.write(n)},o.errorHandler)},o.errorHandler)},ClientStore.prototype.load=function(t,e){var n=this;e=e||function(){},n.filesystem.root.getFile(t,{},function(t){t.file(function(t){e(t)},n.errorHandler)},n.errorHandler)},ClientStore.prototype.delete=function(t,e){var n=this;e=e||function(){},n.filesystem.root.getFile(t,{create:!1},function(t){t.remove(function(){n.getList(),e(!0)},n.errorHandler)},n.errorHandler)},ClientStore.prototype.getList=function(t){var e=this;t=t||function(){};var n=e.filesystem.root.createReader(),o=[],r=function(){n.readEntries(function(e){return e.length?(o=o.concat(e),r(),void 0):(t(o),o)},e.errorHandler)};r()};var cStore=new ClientStore,Client=function(){this.id="c"+guid()},curClient=new Client,Song=function(t){this.id="s"+guid(),this.meta={},t&&t.id?(this.id=t.id,this.meta=t.meta):t&&(this.file=t,this.meta=this.getMeta(t),cStore.save(this.id,this.getFile()))};Song.getMeta=function(t){var e={};if(id3(t,function(t,n){e.title=n.title||n.v2.title,e.album=n.album||n.v2.album,e.artist=n.artist||n.v2.artist,e.genre=n.genre||n.v2.genre,e.duration=n.duration||n.v2.duration,e.year=n.year||n.v2.year}),!e.duration){var n;n=URL.createObjectURL(t);var o=document.createElement("audio");o.addEventListener("canplaythrough",function(t){e.duration=t.currentTarget.duration,URL.revokeObjectURL(n)}),o.setAttribute("src",n)}return e},Song.prototype.getID=function(){return this.id},Song.prototype.getFile=function(){return this.file};var Playlist=function(){this.songs=[],this.currentSong=new Song,this.elapsedTime=0,this.currentEpochTime=new Date};Playlist.prototype.getSong=function(t){return this.songs.filter(function(e){return e.getID==t})[0]},Playlist.prototype.addSong=function(t){this.songs.push(t)},Playlist.prototype.isPlaying=function(){};var curPlaylist=new Playlist,socket=io("http://192.168.43.49:8080");socket.on("connect",function(){socket.on("event",function(){}),socket.on("disconnect",function(){}),socket.on("/player/addSong",function(t){console.log(t)}),console.log("Connected to socket! :D")});var dev=!1;if(dev){Song={id:1,meta:{title:"Somebody",artist:"Avicii",duration:129023,album:"one",genre:"classic"},inMemory:!0},socket.on("playlistSent",function(t){curPlaylist=t.playlist}),socket.on("songsAdded",function(t){curPlaylist=t.playlist}),socket.on("songsRemoved",function(t){curPlaylist=t.playlist}),socket.on("clientDisconnected",function(t){curPlaylist=t.playlist}),socket.on("uploadSong",function(t){var e=new FileReader;e.onload=function(e){socket.emit("upload",{songID:t.song.id,data:e.target.result})},cStore.load(t.song.id,function(t){e.readAsBinaryString(t)})}),socket.on("songPlaying",function(t){curPlaylist=t.playlist}),socket.on("songPaused"),socket.on("songStopped"),socket.emit("getPlaylist",{}),socket.emit("addSong",{client:curClient,song:new Song("blob")}),socket.emit("removeSong",{client:curClient,song:playlist.getSong(anID)}),socket.emit("playCurrent",{client:curClient}),socket.emit("pauseCurrent",{client:curClient}),socket.emit("stopCurrent"),socket.emit("previousSong"),socket.emit("nextSong"),socket.emit("reorderPlaylist",{client:curClient,playlist:rePlaylist});var stompClient=null}